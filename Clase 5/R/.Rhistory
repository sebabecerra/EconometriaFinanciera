BIC(modelo_2)
e1=residuals(modelo_2)
summary(e2)
absserr_2=abs(e2)
summary(absserr_2)
e2=residuals(modelo_2)
summary(e2)
absserr_2=abs(e2)
summary(absserr_2)
AIC(modelo_2)
BIC(modelo_2)
summary(e2)
coeftest(modelo_1)
library(lmtest)
coeftest(modelo_1)
confint(modelo_1)
confint(modelo_2)
library(forecast)
modelo_1_pred <- forecast(modelo_1,h=10, level=c(99.5))
plot(modelo_1_pred)
chartSeries(modelo_1_pred, subset ="last 3 months")
modelo_1_pred <- forecast(modelo_1,h=10, level=c(99.5))
plot(modelo_1_pred)
plot(modelo_1_pred,xlim=c(2500,2900))
plot(modelo_1_pred,xlim=c(2800,2900))
plot(modelo_1_pred,xlim=c(2860,2900))
plot(modelo_1_pred,xlim=c(2860,2980))
plot(modelo_1_pred,xlim=c(2860,2880))
modelo_1_pred <-forecast::forecast(modelo_1,h=10, level=c(99.5))
modelo_1_pred
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
#Tutorial Como importar datos de Yahoo Finance a RStudio
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
#Retorno discreto
BTC_USD_prices_1_roc_d=ROC(BTC_USD_prices_1, type='discret')
head(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
plot(BTC_USD_prices_1_roc_d)
#Retorno logaritmico
BTC_USD_prices_1_roc_l=ROC(BTC_USD_prices_1, type='continuous')
log(424.440/457.334)
head(BTC_USD_prices_1_roc_l)
plot(BTC_USD_prices_1_roc_l)
# otro tipo de gráfico
chartSeries(BTC_USD_prices_1)
chartSeries(BTC_USD_prices_1, subset ="last 3 months")
# Serie en logaritmo
BTC_USD_log=log(BTC_USD_prices_1)
# Autocorrelación y autocorrelación parcial
acf(BTC_USD_prices_1)
pacf(BTC_USD_prices_1)
# Modelo AR(1)
modelo_1=arima(BTC_USD_log, order=c(1,0,0))
modelo_1
coeftest(modelo_1)
confint(modelo_1)
AIC(modelo_1)
BIC(modelo_1)
e1=residuals(modelo_1)
summary(e1)
absserr_1=abs(e1)
summary(absserr_1)
modelo_1_pred <-forecast::forecast(modelo_1,h=10, level=c(99.5))
modelo_1_pred
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
#Tutorial Como importar datos de Yahoo Finance a RStudio
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
head(BTC_USD_prices_1_roc_d)
BTC_USD_prices_1 <- ts(BTC_USD_prices_1, start = decimal_date(ymd("2014-09-17")),
frequency = 365.25 / 7)
library(lubridate)
BTC_USD_prices_1 <- ts(BTC_USD_prices_1, start = decimal_date(ymd("2014-09-17")),
frequency = 365.25 / 7)
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
library(lubridate)
#Tutorial Como importar datos de Yahoo Finance a RStudio
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
# definir la serie de tiempo
BTC_USD_prices_1 <- ts(BTC_USD_prices_1, start = decimal_date(ymd("2014-09-17")),
frequency = 365.25 / 7)
#Retorno discreto
BTC_USD_prices_1_roc_d=ROC(BTC_USD_prices_1, type='discret')
head(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
plot(BTC_USD_prices_1_roc_d)
head(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
BTC_USD_prices_1_roc_l=ROC(BTC_USD_prices_1, type='continuous')
log(424.440/457.334)
head(BTC_USD_prices_1_roc_l)
plot(BTC_USD_prices_1_roc_l)
chartSeries(BTC_USD_prices_1)
chartSeries(BTC_USD_prices_1, subset ="last 3 months")
BTC_USD_log=log(BTC_USD_prices_1)
modelo_1=arima(BTC_USD_log, order=c(1,0,0))
modelo_1
coeftest(modelo_1)
confint(modelo_1)
AIC(modelo_1)
BIC(modelo_1)
e1=residuals(modelo_1)
summary(e1)
absserr_1=abs(e1)
summary(absserr_1)
modelo_1_pred <-forecast::forecast(modelo_1,h=10, level=c(99.5))
modelo_1_pred
plot(modelo_1_pred)
BTC_USD_prices_1 <- ts(BTC_USD_prices_1, start = decimal_date(ymd("2014-09-17")),
frequency = 365.25 / 7)
plot(BTC_USD_prices_1)
BTC_USD_prices_1 <- ts(BTC_USD_prices_1, start = decimal_date(ymd("2014-09-17")),
frequency = 365)
plot(BTC_USD_prices_1)
modelo_1_pred <-forecast::forecast(modelo_1,h=10, level=c(99.5))
modelo_1_pred
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
library(lubridate)
#Tutorial Como importar datos de Yahoo Finance a RStudio
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
# definir la serie de tiempo
BTC_USD_prices_1 <- ts(BTC_USD_prices_1, start = decimal_date(ymd("2014-09-17")),
frequency = 365)
# definir la serie de tiempo
BTC_USD_prices_1 <- ts(BTC_USD_prices_1, start = decimal_date(ymd("2014-09-17")),
frequency = 365)
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
library(lubridate)
#Tutorial Como importar datos de Yahoo Finance a RStudio
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
#Retorno discreto
BTC_USD_prices_1_roc_d=ROC(BTC_USD_prices_1, type='discret')
head(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
plot(BTC_USD_prices_1_roc_d)
#Retorno logaritmico
BTC_USD_prices_1_roc_l=ROC(BTC_USD_prices_1, type='continuous')
log(424.440/457.334)
head(BTC_USD_prices_1_roc_l)
plot(BTC_USD_prices_1_roc_l)
chartSeries(BTC_USD_prices_1)
chartSeries(BTC_USD_prices_1, subset ="last 3 months")
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
library(lubridate)
#Tutorial Como importar datos de Yahoo Finance a RStudio
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
#Retorno discreto
BTC_USD_prices_1_roc_d=ROC(BTC_USD_prices_1, type='discret')
head(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
plot(BTC_USD_prices_1_roc_d)
#Retorno logaritmico
BTC_USD_prices_1_roc_l=ROC(BTC_USD_prices_1, type='continuous')
log(424.440/457.334)
head(BTC_USD_prices_1_roc_l)
plot(BTC_USD_prices_1_roc_l)
chartSeries(BTC_USD_prices_1)
chartSeries(BTC_USD_prices_1, subset ="last 3 months")
# Serie en logaritmo
BTC_USD_log=log(BTC_USD_prices_1)
modelo_1=arima(BTC_USD_log, order=c(1,0,0))
modelo_1
coeftest(modelo_1)
confint(modelo_1)
AIC(modelo_1)
BIC(modelo_1)
e1=residuals(modelo_1)
summary(e1)
absserr_1=abs(e1)
summary(absserr_1)
modelo_1_pred <-forecast::forecast(modelo_1,h=10, level=c(99.5))
modelo_1_pred
# cargar librerías
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
library(lubridate)
#Tutorial Como importar datos de Yahoo Finance a RStudio
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
#Retorno discreto
BTC_USD_prices_1_roc_d=ROC(BTC_USD_prices_1, type='discret')
head(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
plot(BTC_USD_prices_1_roc_d)
#Retorno logaritmico
BTC_USD_prices_1_roc_l=ROC(BTC_USD_prices_1, type='continuous')
log(424.440/457.334)
head(BTC_USD_prices_1_roc_l)
plot(BTC_USD_prices_1_roc_l)
# otro tipo de gráfico
chartSeries(BTC_USD_prices_1)
chartSeries(BTC_USD_prices_1, subset ="last 3 months")
# Serie en logaritmo
BTC_USD_log=log(BTC_USD_prices_1)
modelo_1=arima(BTC_USD_log, order=c(1,0,0), include.mean = FALSE)
modelo_1
modelo_1=arima(BTC_USD_log, order=c(1,0,0), include.mean = T)
modelo_1
modelo_1=arima(BTC_USD_log, order=c(1,0,0), include.drift=TRUE)
modelo_1
modelo_1=auto.arima(BTC_USD_log, order=c(1,0,0), include.drift=TRUE)
modelo_1
modelo_1=auto.arima(BTC_USD_log, order=c(1,0,0), include.mean=F)
modelo_1
help arima
help(arima)
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
# cargar librerías
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
library(lubridate)
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
BTC_USD_prices_1_roc_d=ROC(BTC_USD_prices_1, type='discret')
head(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
plot(BTC_USD_prices_1_roc_d)
BTC_USD_prices_1_roc_l=ROC(BTC_USD_prices_1, type='continuous')
head(BTC_USD_prices_1_roc_l)
log(424.440/457.334)
plot(BTC_USD_prices_1_roc_l)
chartSeries(BTC_USD_prices_1)
chartSeries(BTC_USD_prices_1, subset ="last 3 months")
BTC_USD_log=log(BTC_USD_prices_1)
acf(BTC_USD_prices_1)
pacf(BTC_USD_prices_1)
acf(BTC_USD_prices_1)
pacf(BTC_USD_prices_1)
# Modelo AR(1)
modelo_1=auto.arima(BTC_USD_log, order=c(1,0,0))
modelo_1
# Serie en logaritmo
BTC_USD_log=log(BTC_USD_prices_1)
# Modelo AR(1)
modelo_1=auto.arima(BTC_USD_log, order=c(1,0,0))
modelo_1=arima(BTC_USD_log, order=c(1,0,0))
modelo_1
coeftest(modelo_1)
confint(modelo_1)
AIC(modelo_1)
BIC(modelo_1)
e1=residuals(modelo_1)
summary(e1)
absserr_1=abs(e1)
summary(absserr_1)
modelo_1_pred <-forecast::forecast(modelo_1,h=10, level=c(99.5))
modelo_1_pred
# cargar librerías
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
library(lubridate)
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
BTC_USD_prices_1_roc_d=ROC(BTC_USD_prices_1, type='discret')
head(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
plot(BTC_USD_prices_1_roc_d)
BTC_USD_prices_1_roc_l=ROC(BTC_USD_prices_1, type='continuous')
head(BTC_USD_prices_1_roc_l)
log(424.440/457.334)
plot(BTC_USD_prices_1_roc_l)
chartSeries(BTC_USD_prices_1)
chartSeries(BTC_USD_prices_1, subset ="last 3 months")
BTC_USD_log=log(BTC_USD_prices_1)
acf(BTC_USD_prices_1)
pacf(BTC_USD_prices_1)
modelo_1=arima(BTC_USD_log, order=c(1,0,0))
modelo_1
coeftest(modelo_1)
confint(modelo_1)
modelo_1
AIC(modelo_1)
BIC(modelo_1)
e1=residuals(modelo_1)
summary(e1)
absserr_1=abs(e1)
summary(absserr_1)
modelo_1_pred <-forecast::forecast(modelo_1,h=10, level=c(99.5))
modelo_1_pred
plot(modelo_1_pred)
# cargar librerias
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
library(lubridate)
#Tutorial Como importar datos de Yahoo Finance a RStudio
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
# cargar librerias
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
library(lubridate)
#Tutorial Como importar datos de Yahoo Finance a RStudio
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
print(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
BTC_USD_prices_1_roc_d=ROC(BTC_USD_prices_1, type='discret')
head(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
plot(BTC_USD_prices_1_roc_d)
#Retorno logaritmico
BTC_USD_prices_1_roc_l=ROC(BTC_USD_prices_1, type='continuous')
log(424.440/457.334)
head(BTC_USD_prices_1_roc_l)
plot(BTC_USD_prices_1_roc_l)
# otro tipo de grafico
chartSeries(BTC_USD_prices_1)
chartSeries(BTC_USD_prices_1, subset ="last 3 months")
# Serie en logaritmo
BTC_USD_log=log(BTC_USD_prices_1)
acf(BTC_USD_prices_1) # Para MA
pacf(BTC_USD_prices_1) # Para AR
modelo_1=arima(BTC_USD_log, order=c(1,0,0))
modelo_1
coeftest(modelo_1)
confint(modelo_1)
AIC(modelo_1)
BIC(modelo_1)
e1=residuals(modelo_1)
summary(e1)
absserr_1=abs(e1)
summary(absserr_1)
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
library(lubridate)
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
View(BTC_USD_prices)
head(BTC_USD_prices)
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
BTC_USD_prices_1_roc_d=ROC(BTC_USD_prices_1, type='discret')
head(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
plot(BTC_USD_prices_1_roc_d)
#Retorno logaritmico
BTC_USD_prices_1_roc_l=ROC(BTC_USD_prices_1, type='continuous')
log(424.440/457.334)
head(BTC_USD_prices_1_roc_l)
plot(BTC_USD_prices_1_roc_l)
# otro tipo de grafico
chartSeries(BTC_USD_prices_1)
chartSeries(BTC_USD_prices_1, subset ="last 3 months")
# Serie en logaritmo
BTC_USD_log=log(BTC_USD_prices_1)
# Autocorrelacion y autocorrelacion parcial
acf(BTC_USD_prices_1) # Para MA
pacf(BTC_USD_prices_1) # Para AR
modelo_1=arima(BTC_USD_log, order=c(1,0,0))
modelo_1
coeftest(modelo_1)
confint(modelo_1)
AIC(modelo_1)
BIC(modelo_1)
e1=residuals(modelo_1)
summary(e1)
absserr_1=abs(e1)
summary(absserr_1)
acf(BTC_USD_prices_1) # Para MA
acf(BTC_USD_log) # Para MA
pacf(BTC_USD_prices_1) # Para AR
acf(BTC_USD_log) # Para MA
pacf(BTC_USD_log) # Para AR
modelo_1_pred <-forecast::forecast(modelo_1,h=10, level=c(99.5))
modelo_1_pred
plot(modelo_1_pred)
modelo_1_pred <-forecast::forecast(modelo_1,h=1000, level=c(99.5))
modelo_1_pred
plot(modelo_1_pred)
modelo_2=arima(BTC_USD_log, order=c(2,0,0))
modelo_2
library(quantmod)
library(tseries)
library(lmtest)
library(forecast)
library(lubridate)
#Tutorial Como importar datos de Yahoo Finance a RStudio
mdate="2014-09-17"
BTC_USD_prices=getSymbols('BTC-USD', from=mdate, auto.assign = F)
head(BTC_USD_prices)
mdate="2014-09-17"
BTC_USD_prices_1=getSymbols('BTC-USD', from=mdate, auto.assign = F)[,4]
head(BTC_USD_prices_1)
plot(BTC_USD_prices_1)
BTC_USD_prices_1_roc_d=ROC(BTC_USD_prices_1, type='discret')
head(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
plot(BTC_USD_prices_1_roc_d)
(424.440-457.334)/457.334
plot(BTC_USD_prices_1_roc_d)
BTC_USD_prices_1_roc_l=ROC(BTC_USD_prices_1, type='continuous')
log(424.440/457.334)
head(BTC_USD_prices_1_roc_l)
plot(BTC_USD_prices_1_roc_l)
chartSeries(BTC_USD_prices_1)
chartSeries(BTC_USD_prices_1, subset ="last 3 months")
BTC_USD_log=log(BTC_USD_prices_1)
# A
# Autocorrelacion y autocorrelacion parcial
acf(BTC_USD_prices_1) # Para MA
pacf(BTC_USD_prices_1) # Para AR
# Autocorrelacion y autocorrelacion parcial
acf(BTC_USD_log) # Para MA
pacf(BTC_USD_log) # Para AR
modelo_1=arima(BTC_USD_log, order=c(1,0,0))
modelo_1
coeftest(modelo_1)
confint(modelo_1)
AIC(modelo_1)
BIC(modelo_1)
e1=residuals(modelo_1)
summary(e1)
absserr_1=abs(e1)
summary(absserr_1)
modelo_1_pred <-forecast::forecast(modelo_1,h=1500, level=c(99.5))
modelo_1_pred
plot(modelo_1_pred)
modelo_2=arima(BTC_USD_log, order=c(2,0,0))
modelo_2
